res[,4] <- res[,4]/rep(n_alive,1)
res[,5] <- res[,5]/rep(n_alive,1)
ggplot(res) + geom_pointrange(aes(x=variable,y=`50%`,ymax=`97.5%`,ymin=`2.5%`)) + facet_wrap(~ver) + scale_y_continuous(limits=c(0,1))
infHists_comb <- as.data.frame(rbind(infHists,infHists1, infHists2, infHists3, infHists4, infHists5))
greb <- melt(infHists_comb, id.vars=c("ver","samp","indiv"))
AR1 <- ddply(greb, .(variable, ver, samp), function(x) sum(x$value))
res <- ddply(AR1, .(variable,ver), function(x) quantile(x$V1,c(0.025,0.5,0.975)))
res <- res[order(res$ver,res$variable),]
n_alive <- sapply(strainIsolationTimes, function(x) length(ageMask[ageMask <=x]))
res[,3] <- res[,3]/rep(n_alive,1)
res[,4] <- res[,4]/rep(n_alive,1)
res[,5] <- res[,5]/rep(n_alive,1)
ggplot(res) + geom_pointrange(aes(x=variable,y=`50%`,ymax=`97.5%`,ymin=`2.5%`)) + facet_wrap(~ver) + scale_y_continuous(limits=c(0,1))
omgs$ver <- "AK"
omgs2$ver <- "AK_mine"
omgs3$ver <- "BB_cpp"
omgs4$ver <- "symmetric"
wow <- rbind(omgs, omgs1, omgs2, omgs3, omgs4, omgs5)
#wow <- omgs5
indiv_total <- ggplot(wow[wow$indiv %in% which(ageMask >= 5),]) + geom_histogram(aes(x=infs,fill=ver),binwidth=1) +
#facet_grid(ver~indiv) +
facet_wrap(~indiv)+
scale_x_continuous(expand=c(0,0),
limits=c(0,10),labels=seq(0,10,by=2),breaks=seq(0,10,by=2))
ncol(omgs)
ncol(omgs1)
ncol(omgs2)
ncol(omgs3)
ncol(omgs4)
head(omgs1)
head(omgs)
omgs1$ver <- "beta_binom"
omgs2$ver <- "AK_mine"
omgs3$ver <- "BB_cpp"
omgs4$ver <- "symmetric"
wow <- rbind(omgs, omgs1, omgs2, omgs3, omgs4, omgs5)
indiv_total <- ggplot(wow[wow$indiv %in% which(ageMask >= 5),]) + geom_histogram(aes(x=infs,fill=ver),binwidth=1) +
#facet_grid(ver~indiv) +
facet_wrap(~indiv)+
scale_x_continuous(expand=c(0,0),
limits=c(0,10),labels=seq(0,10,by=2),breaks=seq(0,10,by=2))
indiv_total
indiv_total <- ggplot(wow[wow$indiv %in% which(ageMask >= 5),]) + geom_histogram(aes(x=infs,fill=ver),binwidth=1) +
facet_grid(ver~indiv) +
#facet_wrap(~indiv)+
scale_x_continuous(expand=c(0,0),
limits=c(0,10),labels=seq(0,10,by=2),breaks=seq(0,10,by=2))
indiv_total
for(var in unique(AR1$variable)){
AR1[AR1$variable == var, "V1"] <- AR1[AR1$variable == var, "V1"]/n_alive[as.numeric(var)]
}
AR_densities <- ggplot(AR1) +
geom_density(aes(x=V1)) +
#scale_x_continuous(limits=c(0,1))+
#scale_x_continuous(breaks=seq(0,1,by=0.2),labels=seq(0,1,by=0.2)) +
facet_grid(ver~variable) +
theme_bw()
AR_densities
n_alive
head(AR1)
AR1 <- ddply(greb, .(variable, ver, samp), function(x) sum(x$value))
AR_densities <- ggplot(AR1) +
geom_density(aes(x=V1)) +
#scale_x_continuous(limits=c(0,1))+
scale_x_continuous(breaks=seq(0,1,by=0.2),labels=seq(0,1,by=0.2)) +
facet_grid(ver~variable) +
theme_bw()
AR_densities
AR1 <- ddply(greb, .(variable, ver, samp), function(x) sum(x$value))
for(var in unique(AR1$variable)){
AR1[AR1$variable == var, "V1"] <- AR1[AR1$variable == var, "V1"]/n_alive[as.numeric(var)]
}
AR_densities <- ggplot(AR1) +
geom_density(aes(x=V1)) +
#scale_x_continuous(limits=c(0,1))+
scale_x_continuous(breaks=seq(0,1,by=0.2),labels=seq(0,1,by=0.2)) +
facet_grid(ver~variable) +
theme_bw()
AR_densities
AR_densities <- ggplot(AR1) +
geom_density(aes(x=V1)) +
#scale_x_continuous(limits=c(0,1))+
scale_x_continuous(limits=c(0,1),breaks=seq(0,1,by=0.2),labels=seq(0,1,by=0.2)) +
facet_grid(ver~variable) +
theme_bw()
AR_densities
source('~/Documents/Fluscape/serosolver/scripts/testing/coin_model_group.R', echo=TRUE)
p1
p2
p3
p2
p3
library(ggplot2)
library(coda)
library(plyr)
library(reshape2)
library(data.table)
setwd("~/Documents/Fluscape/serosolver")
devtools::load_all()
n_indiv <- 100
describe_proposals()
histProposal <- 1
buckets <- 1
clusters <- read.csv("~/Documents/Fluscape/serosolver/data/real/clusters.csv")
n_clusters <- max(clusters$cluster1)
filename <- "chains/test_mu"
parTab <- read.csv("~/Documents/Fluscape/serosolver/inputs/parTab_mus.csv",stringsAsFactors=FALSE)
parTab[parTab$names == "wane","values"] <- 1
parTab[parTab$names == "wane","fixed"] <- 1
parTab[parTab$names == "sigma1","values"] <- parTab[parTab$names == "sigma1","values"]*buckets
parTab[parTab$names == "sigma2","values"] <- parTab[parTab$names == "sigma2","values"]*buckets
samplingTimes <- seq(2010*buckets, 2015*buckets, by=1)
antigenicMap <- read.csv("~/Documents/Fluscape/fluscape/trunk/data/Fonville2014AxMapPositionsApprox.csv",stringsAsFactors=FALSE)
antigenicMap[antigenicMap$Strain == "PE06","Strain"] <- "PE09"
antigenicMap
clusters <- read.csv("~/Documents/Fluscape/Measurement_error/clusters.csv")
cluster_labels <- read.csv("~/Documents/Fluscape/Measurement_error/cluster_labels.csv")
colnames(cluster_labels) <- c("cluster1","cluster")
mu_indices <- clusters$cluster1
mu_indices
clusters <- merge(clusters,cluster_labels)
clusters <- clusters[,c("year","cluster")]
colnames(clusters) <- c("year","Strain")
antigenicMap1 <- merge(antigenicMap,clusters,all=TRUE)
fit_dat_clustered <- antigenicMap1[,c("X","Y","year")]
colnames(fit_dat_clustered) <- c("x_coord","y_coord","inf_years")
fit_dat <- generate_antigenic_map(antigenicMap, buckets)
fit_dat
## The general output filename
filename <- "chains/test_mu"
## Read in parameter table to simulate from and change waning rate if necessary
parTab <- read.csv("~/Documents/Fluscape/serosolver/inputs/parTab_mus.csv",stringsAsFactors=FALSE)
parTab[parTab$names == "wane","values"] <- 1
parTab[parTab$names == "wane","fixed"] <- 1
#parTab[parTab$names == "wane","values"] <- parTab[parTab$names == "wane","values"]/buckets
parTab[parTab$names == "sigma1","values"] <- parTab[parTab$names == "sigma1","values"]*buckets
parTab[parTab$names == "sigma2","values"] <- parTab[parTab$names == "sigma2","values"]*buckets
## Possible sampling times
samplingTimes <- seq(2010*buckets, 2015*buckets, by=1)
## Antigenic map for cross reactivity parameters
antigenicMap <- read.csv("~/Documents/Fluscape/fluscape/trunk/data/Fonville2014AxMapPositionsApprox.csv",stringsAsFactors=FALSE)
antigenicMap[antigenicMap$Strain == "PE06","Strain"] <- "PE09"
clusters <- read.csv("~/Documents/Fluscape/Measurement_error/clusters.csv")
cluster_labels <- read.csv("~/Documents/Fluscape/Measurement_error/cluster_labels.csv")
colnames(cluster_labels) <- c("cluster1","cluster")
mu_indices <- clusters$cluster1
clusters <- merge(clusters,cluster_labels)
clusters <- clusters[,c("year","cluster")]
colnames(clusters) <- c("year","Strain")
antigenicMap1 <- merge(antigenicMap,clusters,all=TRUE)
fit_dat_clustered <- antigenicMap1[,c("X","Y","year")]
colnames(fit_dat_clustered) <- c("x_coord","y_coord","inf_years")
fit_dat <- generate_antigenic_map(antigenicMap, buckets)
virus_key <- c("HK68"=1968, "EN72"=1972, "VI75"=1975, "TX77"=1977, "BK79"=1979, "SI87"=1987, "BE89"=1989, "BJ89"=1989,
"BE92"=1992, "WU95"=1995, "SY97"=1997, "FU02"=2002, "CA04"=2004, "WI05"=2005, "PE06"=2006)*buckets
antigenicMap$Strain <- virus_key[antigenicMap$Strain]
fit_dat <- fit_dat[fit_dat$inf_years >= 1968*buckets & fit_dat$inf_years <= 2015*buckets,]
strainIsolationTimes <- unique(fit_dat$inf_years)
tmp <- parTab[parTab$names == "lambda",]
for(i in 1:(length(strainIsolationTimes)-1)){
parTab <- rbind(parTab, tmp)
}
parTab[parTab$names == "mu_mean","values"] <- 3
mu_mean <- parTab[parTab$names == "mu_mean","values"]
mu_sd <- parTab[parTab$names == "mu_sd","values"]
l_mean <- log(mu_mean) - (mu_sd^2)/2
mus <- rlnorm(n_clusters, mean=l_mean, sd=mu_sd)
mu_tab <- data.frame(names="mu",values=mus,fixed=0,steps=0.1,lower_bound=0,upper_bound=8,lower_start=0.5,
upper_start=5,identity=3,block=1)
parTab <- rbind(mu_tab, parTab)
parTab
mu_sd
parTab[parTab$names == "mu_mean","values"] <- 2
parTab[parTab$names == "mu_sd","values"] <- 0.5
mu_mean <- parTab[parTab$names == "mu_mean","values"]
mu_sd <- parTab[parTab$names == "mu_sd","values"]
l_mean <- log(mu_mean) - (mu_sd^2)/2
mus <- rlnorm(n_clusters, mean=l_mean, sd=mu_sd)
mus
mu_tab <- data.frame(names="mu",values=mus,fixed=0,steps=0.1,lower_bound=0,upper_bound=8,lower_start=0.5,
upper_start=5,identity=3,block=1)
parTab <- rbind(mu_tab, parTab)
n_indiv <- 1000
parTab[parTab$names %in% c("alpha","beta"),"values"] <- c(2,12)
infHist <- rep(0,48)
infHist[c(10,17,28,35)] <- 1
y <- solve_model_individual(parTab,infHist,2015,fit_dat,mu_indices-1)
dat <- simulate_data(parTab, 1, n_indiv, buckets,strainIsolationTimes,
samplingTimes, 2, antigenicMap=fit_dat, 0, 0, 6*buckets,75*buckets,
simInfPars=c("mean"=0.15,"sd"=0.5,"bigMean"=0.5,"logSD"=1),
useSIR=TRUE, pInf = NULL, useSpline=FALSE, mu_indices=mu_indices-1)
viruses <- c(1968, 1969, 1972, 1975, 1977, 1979, 1982, 1985, 1987,
1989, 1992, 1995, 1998, 2000, 2002, 2004, 2007, 2009,
2010, 2012, 2014)*buckets
viruses <- seq(1968*buckets,2015*buckets,by=buckets)
titreDat <- dat[[1]]
titreDat <- titreDat[titreDat$virus %in% viruses,]
infectionHistories <- infHist <- dat[[2]]
ages <- dat[[3]]
AR <- dat[[4]]
write.table(titreDat,"~/net/home/serosolver/data/mu_sim_1000_data.csv",sep=",",row.names=FALSE)
write.table(infHist,"~/net/home/serosolver/data/mu_sim_1000_infHist.csv",sep=",",row.names=FALSE)
write.table(ages,"~/net/home/serosolver/data/mu_sim_1000_ages.csv",sep=",",row.names=FALSE)
write.table(AR,"~/net/home/serosolver/data/mu_sim_1000_AR.csv",sep=",",row.names=FALSE)
write.table(parTab,"~/net/home/serosolver/inputs/parTab_mus.csv",sep=",",row.names=FALSE)
nrow(titreDat)
p <- plot_data(titreDat, infHist, strainIsolationTimes, 5, NULL)
p
parTab[parTab$names == "mu_mean","values"] <- 2
parTab[parTab$names == "mu_sd","values"] <- 0.25
mu_mean <- parTab[parTab$names == "mu_mean","values"]
mu_sd <- parTab[parTab$names == "mu_sd","values"]
l_mean <- log(mu_mean) - (mu_sd^2)/2
mus <- rlnorm(n_clusters, mean=l_mean, sd=mu_sd)
mu_tab <- data.frame(names="mu",values=mus,fixed=0,steps=0.1,lower_bound=0,upper_bound=8,lower_start=0.5,
upper_start=5,identity=3,block=1)
parTab <- rbind(mu_tab, parTab)
mus
hist(mus)
length(mus)
parTab[parTab$names == "mu_mean","values"] <- 2
parTab[parTab$names == "mu_sd","values"] <- 0.6
mu_mean <- parTab[parTab$names == "mu_mean","values"]
mu_sd <- parTab[parTab$names == "mu_sd","values"]
parTab[parTab$names == "mu_mean","values"] <- 2
parTab[parTab$names == "mu_sd","values"] <- 0.5
mu_mean <- parTab[parTab$names == "mu_mean","values"]
mu_sd <- parTab[parTab$names == "mu_sd","values"]
l_mean <- log(mu_mean) - (mu_sd^2)/2
mus <- rlnorm(n_clusters, mean=l_mean, sd=mu_sd)
mu_tab <- data.frame(names="mu",values=mus,fixed=0,steps=0.1,lower_bound=0,upper_bound=8,lower_start=0.5,
upper_start=5,identity=3,block=1)
parTab <- rbind(mu_tab, parTab)
mist(mus)
hist(mus)
## Set working directory and load code
setwd("~/Documents/Fluscape/serosolver")
#devtools::load_all()
## How many individuals to simulate?
n_indiv <- 1000
## Which infection history proposal version to use?
describe_proposals()
histProposal <- 1
## Buckets indicates the time resolution of the analysis. Setting
## this to 1 uses annual epochs, whereas setting this to 12 gives
## monthly epochs
buckets <- 1
clusters <- read.csv("~/Documents/Fluscape/serosolver/data/real/clusters.csv")
n_clusters <- max(clusters$cluster1)
## The general output filename
filename <- "chains/test_mu"
## Read in parameter table to simulate from and change waning rate if necessary
parTab <- read.csv("~/Documents/Fluscape/serosolver/inputs/parTab_mus.csv",stringsAsFactors=FALSE)
parTab[parTab$names == "wane","values"] <- 1
parTab[parTab$names == "wane","fixed"] <- 1
#parTab[parTab$names == "wane","values"] <- parTab[parTab$names == "wane","values"]/buckets
parTab[parTab$names == "sigma1","values"] <- parTab[parTab$names == "sigma1","values"]*buckets
parTab[parTab$names == "sigma2","values"] <- parTab[parTab$names == "sigma2","values"]*buckets
## Possible sampling times
samplingTimes <- seq(2010*buckets, 2015*buckets, by=1)
## Antigenic map for cross reactivity parameters
antigenicMap <- read.csv("~/Documents/Fluscape/fluscape/trunk/data/Fonville2014AxMapPositionsApprox.csv",stringsAsFactors=FALSE)
antigenicMap[antigenicMap$Strain == "PE06","Strain"] <- "PE09"
clusters <- read.csv("~/Documents/Fluscape/Measurement_error/clusters.csv")
cluster_labels <- read.csv("~/Documents/Fluscape/Measurement_error/cluster_labels.csv")
colnames(cluster_labels) <- c("cluster1","cluster")
mu_indices <- clusters$cluster1
clusters <- merge(clusters,cluster_labels)
clusters <- clusters[,c("year","cluster")]
colnames(clusters) <- c("year","Strain")
antigenicMap1 <- merge(antigenicMap,clusters,all=TRUE)
fit_dat_clustered <- antigenicMap1[,c("X","Y","year")]
colnames(fit_dat_clustered) <- c("x_coord","y_coord","inf_years")
fit_dat <- generate_antigenic_map(antigenicMap, buckets)
#fit_dat <- fit_dat_clustered
#fit_dat <- fit_dat[order(fit_dat$inf_years),]
## Rename circulation years based on isolation time
virus_key <- c("HK68"=1968, "EN72"=1972, "VI75"=1975, "TX77"=1977, "BK79"=1979, "SI87"=1987, "BE89"=1989, "BJ89"=1989,
"BE92"=1992, "WU95"=1995, "SY97"=1997, "FU02"=2002, "CA04"=2004, "WI05"=2005, "PE06"=2006)*buckets
antigenicMap$Strain <- virus_key[antigenicMap$Strain]
## All possible circulation times
fit_dat <- fit_dat[fit_dat$inf_years >= 1968*buckets & fit_dat$inf_years <= 2015*buckets,]
strainIsolationTimes <- unique(fit_dat$inf_years)
## Creating unique boosting parameter for each strain or cluster
#n_clusters <- length(strainIsolationTimes)
#mu_indices <- seq(1,length(strainIsolationTimes),by=1)
## Add rows for each lambda value to be inferred
tmp <- parTab[parTab$names == "lambda",]
for(i in 1:(length(strainIsolationTimes)-1)){
parTab <- rbind(parTab, tmp)
}
## Generate value for each mu
parTab[parTab$names == "mu_mean","values"] <- 2
parTab[parTab$names == "mu_sd","values"] <- 0.5
mu_mean <- parTab[parTab$names == "mu_mean","values"]
mu_sd <- parTab[parTab$names == "mu_sd","values"]
l_mean <- log(mu_mean) - (mu_sd^2)/2
mus <- rlnorm(n_clusters, mean=l_mean, sd=mu_sd)
#mus <- rnorm(n_mus, mean=mu_mean, sd=mu_sd)
mu_tab <- data.frame(names="mu",values=mus,fixed=0,steps=0.1,lower_bound=0,upper_bound=8,lower_start=0.5,
upper_start=5,identity=3,block=1)
parTab <- rbind(mu_tab, parTab)
## Change alpha and beta to change proposal distribution
## Setting to c(1,1) gives uniform distribution on total number of infections
#parTab[parTab$names %in% c("alpha","beta"),"values"] <- find_a_b(length(strainIsolationTimes),7,50)
parTab[parTab$names %in% c("alpha","beta"),"values"] <- c(2,12)
infHist <- rep(0,48)
infHist[c(10,17,28,35)] <- 1
y <- solve_model_individual(parTab,infHist,2015,fit_dat,mu_indices-1)
## Simulate some fake data
#strainIsolationTimes <- 1968:2015
#lambdas <- runif(length(strainIsolationTimes),0.1/buckets,0.5/buckets)
dat <- simulate_data(parTab, 1, n_indiv, buckets,strainIsolationTimes,
samplingTimes, 2, antigenicMap=fit_dat, 0, 0, 6*buckets,75*buckets,
simInfPars=c("mean"=0.15,"sd"=0.5,"bigMean"=0.5,"logSD"=1),
useSIR=TRUE, pInf = NULL, useSpline=FALSE, mu_indices=mu_indices-1)
mus
hist(mus)
viruses <- c(1968, 1969, 1972, 1975, 1977, 1979, 1982, 1985, 1987,
1989, 1992, 1995, 1998, 2000, 2002, 2004, 2007, 2009,
2010, 2012, 2014)*buckets
titreDat <- dat[[1]]
titreDat <- titreDat[titreDat$virus %in% viruses,]
infectionHistories <- infHist <- dat[[2]]
ages <- dat[[3]]
AR <- dat[[4]]
parTab
write.table(titreDat,"~/net/home/serosolver/data/mu_sim_1000_dat.csv",sep=",",row.names=FALSE)
write.table(infHist,"~/net/home/serosolver/data/mu_sim_1000_infHist.csv",sep=",",row.names=FALSE)
write.table(ages,"~/net/home/serosolver/data/mu_sim_1000_ages.csv",sep=",",row.names=FALSE)
write.table(AR,"~/net/home/serosolver/data/mu_sim_1000_AR.csv",sep=",",row.names=FALSE)
write.table(parTab,"~/net/home/serosolver/inputs/parTab_mus.csv",sep=",",row.names=FALSE)
write.table(parTab,"~/net/home/serosolver/inputs/parTab_mus.csv",sep=",",row.names=FALSE)
head(titreDat)
titreDat <- dat[[1]]
head(titreDat)
samplingTimes
dat <- simulate_data(parTab, 1, n_indiv, buckets,strainIsolationTimes,
samplingTimes, 5, antigenicMap=fit_dat, 0, 0, 6*buckets,75*buckets,
simInfPars=c("mean"=0.15,"sd"=0.5,"bigMean"=0.5,"logSD"=1),
useSIR=TRUE, pInf = NULL, useSpline=FALSE, mu_indices=mu_indices-1)
titreDat <- dat[[1]]
tmp <- titreDat[titreDat$individual == 1]
head(titreDat)
ggplot(titreDat[titreDat$individual == 1,]) + geom_point(aes(x=virus,y=titre),col="red") + facet_wrap(~samples)
plot_data
infHist <- as.data.frame(cbind(indivs, dat[[2]]))
colnames(infHist) <- c("individual",strainIsolationTimes)
titreDat <- dat[[1]]
indivs <- unique(titreDat$individual)
infHist <- as.data.frame(cbind(indivs, dat[[2]]))
colnames(infHist) <- c("individual",strainIsolationTimes)
meltedInfHist <- reshape2::melt(infHist, id.vars="individual")
meltedInfHist$variable <- as.numeric(as.character(meltedInfHist$variable))
meltedInfHist <- meltedInfHist[meltedInfHist$value > 0,]
samps <- sample(unique(data$individual), n_samps)
samps
p1 <- ggplot(data[data$individual ==1,]) +
geom_point(aes(x=as.integer(virus),y=titre)) +
geom_vline(data=meltedInfHist[meltedInfHist$individual %in% samps,], aes(xintercept=variable), col="red",linetype="dashed")+
facet_grid(~samples,nrow=1)
p1 <- ggplot(titreDat[titreDat$individual ==1,]) +
geom_point(aes(x=as.integer(virus),y=titre)) +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 1,], aes(xintercept=variable), col="red",linetype="dashed")+
facet_grid(~samples,nrow=1)
p1 <- ggplot(titreDat[titreDat$individual ==1,]) +
geom_point(aes(x=as.integer(virus),y=titre)) +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 1,], aes(xintercept=variable), col="red",linetype="dashed")+
facet_grid(~samples)
theme_bw()
p1 <- ggplot(titreDat[titreDat$individual ==1,]) +
geom_point(aes(x=as.integer(virus),y=titre)) +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 1,], aes(xintercept=variable), col="red",linetype="dashed")+
facet_grid(~samples)+
theme_bw()
p1
infHist
rowSums(infHisyt)
rowSums(infHist)
rowSums(dat[[2]])
p1 <- ggplot(titreDat[titreDat$individual ==8,]) +
geom_point(aes(x=as.integer(virus),y=titre)) +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 8,], aes(xintercept=variable), col="red",linetype="dashed")+
facet_grid(~samples)+
theme_bw()
p1
p1 <- ggplot(titreDat[titreDat$individual ==8,]) +
geom_point(aes(x=as.integer(virus),y=titre)) +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 8,], aes(xintercept=variable), col="red",linetype="dashed")+
facet_grid(~samples)+
ylab("log Titre") +
xlab("Circulating year") +
theme(axis.text.x=element_text(angle=45,vjust=1))+
theme_bw()
p1
p1 <- ggplot(titreDat[titreDat$individual ==8,]) +
geom_point(aes(x=as.integer(virus),y=titre)) +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 8,], aes(xintercept=variable), col="red",linetype="dashed")+
facet_grid(~samples)+
ylab("log Titre") +
xlab("Circulating year") +
theme(axis.text.x=element_text(angle=90,vjust=1))+
theme_bw()
p1 <- ggplot(titreDat[titreDat$individual ==8,]) +
geom_point(aes(x=as.integer(virus),y=titre)) +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 8,], aes(xintercept=variable), col="red",linetype="dashed")+
facet_grid(~samples)+
ylab("log Titre") +
xlab("Circulating year") +
theme_bw()+
theme(axis.text.x=element_text(angle=45,vjust=1))
p1
p1 <- ggplot(titreDat[titreDat$individual ==8,]) +
geom_point(aes(x=as.integer(virus),y=titre)) +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 8,], aes(xintercept=variable), col="red",linetype="dashed")+
facet_grid(~samples)+
ylab("log Titre") +
xlab("Circulating year") +
theme_bw()+
theme(axis.text.x=element_text(angle=45,vjust=0))
p1
p1 <- ggplot(titreDat[titreDat$individual ==8,]) +
geom_point(aes(x=as.integer(virus),y=titre)) +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 8,], aes(xintercept=variable), col="red",linetype="dashed")+
facet_grid(~samples)+
ylab("log Titre") +
xlab("Circulating year") +
theme_bw()+
theme(axis.text.x=element_text(angle=45))
p1
p1 <- ggplot(titreDat[titreDat$individual ==8,]) +
geom_point(aes(x=as.integer(virus),y=titre)) +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 8,], aes(xintercept=variable), col="red",linetype="dashed")+
facet_grid(~samples)+
ylab("log Titre") +
xlab("Circulating year") +
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1))
p1
p1 <- ggplot(titreDat[titreDat$individual ==8,]) +
geom_line(aes(x=as.integer(virus),y=titre)) +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 8,], aes(xintercept=variable), col="red",linetype="dashed")+
facet_grid(~samples)+
ylab("log Titre") +
xlab("Circulating year") +
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1))
p1
p1 <- ggplot(titreDat[titreDat$individual ==8,]) +
geom_line(aes(x=as.integer(virus),y=titre)) +
geom_point(aes(x=as.integer(virus),y=titre),col="red") +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 8,], aes(xintercept=variable), col="blue",linetype="dashed")+
facet_grid(~samples)+
ylab("log Titre") +
xlab("Circulating year") +
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1))
p1
p1 <- ggplot(titreDat[titreDat$individual ==8,]) +
geom_line(aes(x=as.integer(virus),y=titre)) +
geom_point(aes(x=as.integer(virus),y=titre),col="red") +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 8,], aes(xintercept=variable), col="black",linetype="dashed")+
facet_grid(~samples)+
ylab("log Titre") +
xlab("Circulating year") +
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1))
p1
p1 <- ggplot(titreDat[titreDat$individual ==8,]) +
geom_line(aes(x=as.integer(virus),y=titre),col="red") +
geom_point(aes(x=as.integer(virus),y=titre),col="red") +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 8,], aes(xintercept=variable), col="black",linetype="dashed")+
facet_grid(~samples)+
ylab("log Titre") +
xlab("Circulating year") +
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1))
p1
p1 <- ggplot(titreDat[titreDat$individual ==8,]) +
#geom_line(aes(x=as.integer(virus),y=titre),col="red") +
geom_point(aes(x=as.integer(virus),y=titre),col="red") +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 8,], aes(xintercept=variable), col="black",linetype="dashed")+
facet_grid(~samples)+
ylab("log Titre") +
xlab("Circulating year") +
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1))
p1
p1 <- ggplot(titreDat[titreDat$individual ==8,]) +
#geom_line(aes(x=as.integer(virus),y=titre),col="red") +
geom_point(aes(x=as.integer(virus),y=titre),col="red") +
geom_vline(data=meltedInfHist[meltedInfHist$individual == 8,], aes(xintercept=variable), col="black",linetype="dashed")+
facet_grid(~samples)+
scale_y_continuous(expand=c(0,0))+
ylab("log Titre") +
xlab("Circulating year") +
theme_bw()+
theme(axis.text.x=element_text(angle=45,hjust=1))
p1
svg("~/Dropbox/PhD/LSA/Figures/example_data.svg",width=10,height=4)
plot(p1)
dev.off()
svg("~/Dropbox/PhD/LSA/Figures/example_data.svg",width=10,height=3)
plot(p1)
dev.off()
png("~/Dropbox/PhD/LSA/Figures/example_data.png",width=10,height=3)
plot(p1)
dev.off()
png("~/Dropbox/PhD/LSA/Figures/example_data.png",width=10,height=3,units="in")
png("~/Dropbox/PhD/LSA/Figures/example_data.png",width=10,height=3,units="in",res=300)
plot(p1)
dev.off()

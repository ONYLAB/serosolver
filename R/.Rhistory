function(x){
sprintf("L%02dH%02dP%02d",as.numeric(x[3]),as.numeric(x[2]),as.numeric(x[1]))
})
parV2$Participant_ID <- apply(parV2[,1:3],1,
function(x){
sprintf("L%02dH%02dP%02d",as.numeric(x[3]),as.numeric(x[2]),as.numeric(x[1]))
})
parV3$Participant_ID <- apply(parV3[,1:3],1,
function(x){
sprintf("L%02dH%02dP%02d",as.numeric(x[3]),as.numeric(x[2]),as.numeric(x[1]))
})
parV1 <- parV1[,c("Participant_ID","PART_SAMPLE_TIME")]
parV1$Visit <- "V1"
colnames(parV1) <- c("Participant_ID","sample","Visit")
parV2 <- parV2[,c("Participant_ID","PART_SAMPLE_TIME")]
parV2$Visit <- "V2"
colnames(parV2) <- c("Participant_ID","sample","Visit")
parV3 <- parV3[,c("Participant_ID","PART_SAMPLE_TIME")]
parV3$Visit <- "V3"
colnames(parV3) <- c("Participant_ID","sample","Visit")
parV4A <- parV4[,c("Participant_ID","PART_BIRTH_YEAR","PART_BIRTH_MONTH")]
parV4B <- parV4[,c("Participant_ID","PART_SAMPLE_TIME")]
parV4B$Visit <- "V4"
colnames(parV4B) <- c("Participant_ID","sample","Visit")
dat <- merge(dat,parV4A,by="Participant_ID")
dat$birth_date <- paste0(dat$PART_BIRTH_YEAR,"-",dat$PART_BIRTH_MONTH,"-01")
dat$birth_date <- as.Date(dat$birth_date)
datV1 <- merge(dat[dat$Visit=="V1",],parV1,by=c("Participant_ID","Visit"),all = TRUE)
datV2 <- merge(dat[dat$Visit=="V2",],parV2,by=c("Participant_ID","Visit"),all=TRUE)
datV3 <- merge(dat[dat$Visit=="V3",],parV3,by=c("Participant_ID","Visit"),all = TRUE)
datV4 <- merge(dat[dat$Visit=="V4",],parV4B,by=c("Participant_ID","Visit"),all = TRUE)
dat <- rbind(datV1,datV2,datV3,datV4)
dat$sample <- as.Date(dat$sample)
dat <- dat[,c("Participant_ID","Visit","Virus","HI_Titer","birth_date","sample")]
unique(dat$Virus)
dat <- read.csv("~/Documents/Fluscape/fluscape/trunk/data/HI_titers_paired.csv")
dat <- read.csv("~/Documents/Fluscape/fluscape/trunk/data/HI_titers_paired.csv")
viruses <- read.csv("~/Documents/Fluscape/FluScapeOwn/H3N2_codes.csv")
viruses <- read.csv("~/Documents/Fluscape/FluScapeOwn/H3N2_codes.csv")
colnames(viruses)[1] <- "Virus"
dat <- merge(dat,viruses[,c("Virus","no_duplicated_codes")], by = "Virus")
head(dat)
colnames(dat)[1] <- "OldVirus"
colnames(dat)[15] <- "Virus"
head(dat)
unique(dat$Virus)
viruses <- viruses[viruses$no_duplicated_codes %in% unique(dat$Virus),]
viruses
tmpViruses <- unique(viruses[,c("year","no_duplicated_codes")])
tmpViruses <- tmpViruses[order(tmpViruses$no_duplicated_codes),]
real_order <- order(tmpViruses$year)
real_order
levels(tmp$Virus)
levels(tmp$Virus)[real_order]
dat$Virus <- factor(dat$Virus,levels(dat$Virus)[real_order])
unique(dat$Virus)
parV4 <- read.csv("~/Documents/Fluscape/fluscape/trunk/data/Participants_V4.csv")
parV1 <- read.csv("~/Documents/Fluscape/fluscape/trunk/data/Participants_V1.csv")
parV2 <- read.csv("~/Documents/Fluscape/fluscape/trunk/data/Participants_V2.csv")
parV3 <- read.csv("~/Documents/Fluscape/fluscape/trunk/data/Participants_V3.csv")
parV4$Participant_ID <- apply(parV4[,1:3],1,
function(x){
sprintf("L%02dH%02dP%02d",as.numeric(x[3]),as.numeric(x[2]),as.numeric(x[1]))
})
parV1$Participant_ID <- apply(parV1[,1:3],1,
function(x){
sprintf("L%02dH%02dP%02d",as.numeric(x[3]),as.numeric(x[2]),as.numeric(x[1]))
})
parV2$Participant_ID <- apply(parV2[,1:3],1,
function(x){
sprintf("L%02dH%02dP%02d",as.numeric(x[3]),as.numeric(x[2]),as.numeric(x[1]))
})
parV3$Participant_ID <- apply(parV3[,1:3],1,
function(x){
sprintf("L%02dH%02dP%02d",as.numeric(x[3]),as.numeric(x[2]),as.numeric(x[1]))
})
parV1 <- parV1[,c("Participant_ID","PART_SAMPLE_TIME")]
parV1$Visit <- "V1"
colnames(parV1) <- c("Participant_ID","sample","Visit")
parV2 <- parV2[,c("Participant_ID","PART_SAMPLE_TIME")]
parV2$Visit <- "V2"
colnames(parV2) <- c("Participant_ID","sample","Visit")
parV3 <- parV3[,c("Participant_ID","PART_SAMPLE_TIME")]
parV3$Visit <- "V3"
colnames(parV3) <- c("Participant_ID","sample","Visit")
parV4A <- parV4[,c("Participant_ID","PART_BIRTH_YEAR","PART_BIRTH_MONTH")]
parV4B <- parV4[,c("Participant_ID","PART_SAMPLE_TIME")]
parV4B$Visit <- "V4"
colnames(parV4B) <- c("Participant_ID","sample","Visit")
dat <- merge(dat,parV4A,by="Participant_ID")
dat$birth_date <- paste0(dat$PART_BIRTH_YEAR,"-",dat$PART_BIRTH_MONTH,"-01")
dat$birth_date <- as.Date(dat$birth_date)
datV1 <- merge(dat[dat$Visit=="V1",],parV1,by=c("Participant_ID","Visit"),all = TRUE)
datV2 <- merge(dat[dat$Visit=="V2",],parV2,by=c("Participant_ID","Visit"),all=TRUE)
datV3 <- merge(dat[dat$Visit=="V3",],parV3,by=c("Participant_ID","Visit"),all = TRUE)
datV4 <- merge(dat[dat$Visit=="V4",],parV4B,by=c("Participant_ID","Visit"),all = TRUE)
dat <- rbind(datV1,datV2,datV3,datV4)
dat$sample <- as.Date(dat$sample)
dat <- dat[,c("Participant_ID","Visit","Virus","HI_Titer","birth_date","sample")]
dat[dat$Visit == "v1","Visit"] <- "V1"
dat[dat$HI_Titer == 1,"HI_Titer"] <- 10
dat[dat$HI_Titer == 0,"HI_Titer"] <- 5
head(dat)
dat[dat$HI_Titer==0,]
dat[dat$HI_Titer==0,"HI_Titer"]
dat[dat$HI_Titer==0,"HI_Titer"] <- 5
unique(dat$HI_Titer)
class(dat$HI_Titer)
dat$logTiter <- log2(dat$HI_Titer/5)
ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[2],]) + geom_line(aes(x=sample,y=HI_Titer)) + facet_wrap(~Virus)
ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[3],]) + geom_line(aes(x=sample,y=HI_Titer)) + facet_wrap(~Virus)
ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[4],]) + geom_line(aes(x=sample,y=HI_Titer)) + facet_wrap(~Virus)
ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[2],]) + geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus)
ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[2],]) + geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus)
ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[4],]) + geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus)
min(dat$sample)
max(dat$sample)
min(!is.na(dat$sample))
min(dat$sample[!is.na(dat$sample)])
max(dat$sample[!is.na(dat$sample)])
knitr::opts_chunk$set(echo = FALSE,message=FALSE,warning=FALSE)
library(plyr)
library(ggplot2)
library(knitr)
dat <- read.csv("~/Documents/Fluscape/fluscape/trunk/data/HI_titers_paired.csv")
viruses <- read.csv("~/Documents/Fluscape/FluScapeOwn/H3N2_codes.csv")
colnames(viruses)[1] <- "Virus"
dat <- merge(dat,viruses[,c("Virus","no_duplicated_codes")], by = "Virus")
colnames(dat)[1] <- "OldVirus"
colnames(dat)[15] <- "Virus"
viruses <- viruses[viruses$no_duplicated_codes %in% unique(dat$Virus),]
tmpViruses <- unique(viruses[,c("year","no_duplicated_codes")])
tmpViruses <- tmpViruses[order(tmpViruses$no_duplicated_codes),]
real_order <- order(tmpViruses$year)
dat$Virus <- factor(dat$Virus,levels(dat$Virus)[real_order])
parV4 <- read.csv("~/Documents/Fluscape/fluscape/trunk/data/Participants_V4.csv")
parV1 <- read.csv("~/Documents/Fluscape/fluscape/trunk/data/Participants_V1.csv")
parV2 <- read.csv("~/Documents/Fluscape/fluscape/trunk/data/Participants_V2.csv")
parV3 <- read.csv("~/Documents/Fluscape/fluscape/trunk/data/Participants_V3.csv")
parV4$Participant_ID <- apply(parV4[,1:3],1,
function(x){
sprintf("L%02dH%02dP%02d",as.numeric(x[3]),as.numeric(x[2]),as.numeric(x[1]))
})
parV1$Participant_ID <- apply(parV1[,1:3],1,
function(x){
sprintf("L%02dH%02dP%02d",as.numeric(x[3]),as.numeric(x[2]),as.numeric(x[1]))
})
parV2$Participant_ID <- apply(parV2[,1:3],1,
function(x){
sprintf("L%02dH%02dP%02d",as.numeric(x[3]),as.numeric(x[2]),as.numeric(x[1]))
})
parV3$Participant_ID <- apply(parV3[,1:3],1,
function(x){
sprintf("L%02dH%02dP%02d",as.numeric(x[3]),as.numeric(x[2]),as.numeric(x[1]))
})
parV1 <- parV1[,c("Participant_ID","PART_SAMPLE_TIME")]
parV1$Visit <- "V1"
colnames(parV1) <- c("Participant_ID","sample","Visit")
parV2 <- parV2[,c("Participant_ID","PART_SAMPLE_TIME")]
parV2$Visit <- "V2"
colnames(parV2) <- c("Participant_ID","sample","Visit")
parV3 <- parV3[,c("Participant_ID","PART_SAMPLE_TIME")]
parV3$Visit <- "V3"
colnames(parV3) <- c("Participant_ID","sample","Visit")
parV4A <- parV4[,c("Participant_ID","PART_BIRTH_YEAR","PART_BIRTH_MONTH")]
parV4B <- parV4[,c("Participant_ID","PART_SAMPLE_TIME")]
parV4B$Visit <- "V4"
colnames(parV4B) <- c("Participant_ID","sample","Visit")
dat <- merge(dat,parV4A,by="Participant_ID")
dat$birth_date <- paste0(dat$PART_BIRTH_YEAR,"-",dat$PART_BIRTH_MONTH,"-01")
dat$birth_date <- as.Date(dat$birth_date)
datV1 <- merge(dat[dat$Visit=="V1",],parV1,by=c("Participant_ID","Visit"),all = TRUE)
datV2 <- merge(dat[dat$Visit=="V2",],parV2,by=c("Participant_ID","Visit"),all=TRUE)
datV3 <- merge(dat[dat$Visit=="V3",],parV3,by=c("Participant_ID","Visit"),all = TRUE)
datV4 <- merge(dat[dat$Visit=="V4",],parV4B,by=c("Participant_ID","Visit"),all = TRUE)
dat <- rbind(datV1,datV2,datV3,datV4)
dat$sample <- as.Date(dat$sample)
dat <- dat[,c("Participant_ID","Visit","Virus","HI_Titer","birth_date","sample")]
dat[dat$Visit == "v1","Visit"] <- "V1"
dat <- dat[dat$Visit != "20",]
dat[dat$HI_Titer == 1 & !is.na(dat$HI_Titer),"HI_Titer"] <- 10
dat[dat$HI_Titer == 0 & !is.na(dat$HI_Titer),"HI_Titer"] <- 5
dat$logTiter <- log2(dat$HI_Titer/5)
minx <- min(dat$sample[!is.na(dat$sample)])
maxx <- max(dat$sample[!is.na(dat$sample)])
ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[2],]) + geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus) + scale_y_continuous(limits=c(minx,maxx))
head(dat)
ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[2],]) + geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus) + scale_x_continuous(limits=c(minx,maxx))
minx <- as.numeric(min(dat$sample[!is.na(dat$sample)]))
maxx <- as.numeric(max(dat$sample[!is.na(dat$sample)]))
ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[2],]) + geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus) + scale_x_continuous(limits=c(minx,maxx))
minx
maxx
ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[2],]) + geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus) + scale_x_datetime(limits=c(minx,maxx))
class(minx)
minx <- as.Date(min(dat$sample[!is.na(dat$sample)]),origin="2000-01-01")
maxx <- as.Date(max(dat$sample[!is.na(dat$sample)]),origin="2000-01-01")
ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[2],]) + geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus) + scale_x_datetime(limits=c(minx,maxx))
ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[2],]) + geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus) + scale_x_continuous(limits=c(minx,maxx))
class(minx)
minx
?scale_x_datetime
ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[2],]) + geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus) + scale_x_date(limits=c(minx,maxx))
length(unique(dat$Participant_ID))
samps <- sample(3, 1:length(unique(dat$Participant_ID)))
samps
samps <- sample(1:length(unique(dat$Participant_ID)),3)
samps
indiv1 <- ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[samps[1],]) + geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus) + scale_x_date(limits=c(minx,maxx))
indiv1 <- ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[samps[1]],]) +
geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus) + scale_x_date(limits=c(minx,maxx))
indiv2 <- ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[samps[2]],]) +
geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus) + scale_x_date(limits=c(minx,maxx))
indiv3 <- ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[samps[3]],]) +
geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus) + scale_x_date(limits=c(minx,maxx))
cowplot::plot_grid(indiv1,indiv2,indiv3,ncol=1)
samps[1]
samps[2]
unique(dat$Participant_ID)[samps[1]],]
dat[dat$Participant_ID==unique(dat$Participant_ID)[samps[1]],]
unique(dat$Participant_ID)[samps[1]]
indiv1
dat[dat$Participant_ID==unique(dat$Participant_ID)[samps[1]],]
dat[dat$Participant_ID==unique(dat$Participant_ID)[samps[2]],]
dat[dat$Participant_ID==unique(dat$Participant_ID)[samps[3]],]
indiv1 <- ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[2],]) +
geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus) + scale_x_date(limits=c(minx,maxx))
indiv1
indiv1 <- ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[2],]) +
geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus) + scale_x_date(limits=c(minx,maxx))
indiv2 <- ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[15],]) +
geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus) + scale_x_date(limits=c(minx,maxx))
indiv3 <- ggplot(dat[dat$Participant_ID==unique(dat$Participant_ID)[28],]) +
geom_line(aes(x=sample,y=logTiter)) + facet_wrap(~Virus) + scale_x_date(limits=c(minx,maxx))
cowplot::plot_grid(indiv1,indiv2,indiv3,ncol=1)
getwd()
getwd()
setwd("..")
getwd()
setwd("data/)
setwd("data/")
list.files()

antigenicMap <- read.csv("~/Documents/fluscape/trunk/data/Fonville2014AxMapPositionsApprox.csv",stringsAsFactors=FALSE)
antigenicMap
antigenicDistances <- antigenicMap
buckets <- 1
fit
plot(fit)
y_predict
x_predict
x_predictfit
fit_dat
outputdmatrix.fromcoord(fit_dat)
getwd()
devtools::load_all("~/Documents/serosolver_own/serosolver")
outputdmatrix.fromcoord(fit_dat)
image(outputdmatrix.fromcoord(fit_dat))
image(outputdmatrix.fromcoord(fit_dat))
mat <- outputdmatrix.fromcoord(fit_dat)
mat[1,1]
1 - 1
1 - mat
image(1 - mat)
mat1 <- 1 - mat
mat1[mat1 < 0] <- 0
image(mat1)
mat1 <- 1 - 0.03*mat
mat1[mat1 < 0] <- 0
image(mat1)
mat1[mat1 < 0] <- 0
mat1
head(fit_dat)
apply(fit_dat, 1, function(y) y - x
)
apply(fit_dat,1,print)
anti.map.in <- fit_dat
for(row1 in 1:nrow(fit_dat)){
    x1 <- fit_dat[row1,1]
    y2 <- fit_dat[row1, 2]
  
    for(row2 in 1:nrow(fit_dat)){
        x2 <- fit_dat[row2,1]
        y2 <- fit_dat[row2,2]im
        tmp <- sqrt(sum((x1-x2)^2, (y1-y2)^2))
        mat[row1,row2] <- tmp

    }
}
image(mat)
mat1 <- outputdmatrix.fromcoord(fit_dat)
mat1-mat
mat[1,]
mat1[1,]
mat[,1]
mat1 <- outputdmatrix.fromcoord(fit_dat[,1:2])
mat1[1,]
mat[1,]
mat - mat1
antigenicMap2 <- read.csv("../data/antigenic_map.csv)
antigenicMap2 <- read.csv("../data/antigenic_map.csv")
head(antigenicMap2)
head(antigenicMap)
head(fit_dat)
wow <- outputdmatrix.fromcoord(antigenicMap2[,2:3])
head(wow)
image(wow)
par(mfrow=c(1,2))
image(wow)
wow1 <- outputdmatrix.fromcoord(fit_dat[1,2])
image(wow1)
wow1
wow1 <- outputdmatrix.fromcoord(fit_dat[,1:2])
image(wow1)
wow1-wow
wow1
dim(wow1)
dim(wow)
antigenicDistances <- antigenicMap1
antigenicDistances <- antigenicMap2
antigenicDistances
colnames(antigenicDistances) <- c("Strain","X","Y")
fit_dat
plot(fit_dat[,1:2])
plot(fit_dat[,1:2],type='l')
par(mfrow=c(1,1))
plot(fit_dat[,1:2],type='l')
plot(fit_dat[,1:2],type='l')
getwd()
fit_dat
fit <- 
fi
fit_dat <- fit_dat[,c(3,1,2)]
getwd9)
getwd()
write.table(fit_dat, "antigenicMap_AK.csv",sep=",",row.names=FALSE)
parTab[parTab$names %in% c("alpha","databeta"),"values"] <- c(2,12)
data
data
infectionHistories
infectionHistories
data
strains
strainIsolationTImes
strainIsolationTimes
antigenicMapMelted
samples
samples
sampleTimes
individuals
n_indiv
for(i in 1:nrow(samples)){
    indicesData <- c(indicesData, nrow(samples[data$individual == samples[i,"individual"] &
                                               data$samples == samples[i,"samples"] &
                                               data$run == samples[i,"run"],]))
}
indicesData
nrow(data)
length(titres)
samples
samples
indicesData
for(i in 1:nrow(samples)){
    indicesData <- c(indicesData, nrow(samples[data$individual == samples[i,"individual"] &
                                               data$samples == samples[i,"samples"] &
                                               data$run == samples[i,"run"],]))
}
indicesSamples
indicesSamples
indicesDataOverall
indicesSamples
antigenicMapLong <- 1-pars["sigma1"]*antigenicMapMelted
y
titres
plot(titres)
lines(y)
plot(y~s
samples
sampleTimes
plot(y~strainIsolationTImes)
plot(y~strainIsolationTimes)
strains
strainIndices
sampleTimes
indicesData
indicesDataOverall
indicesSamples
virusIndices
indicesData
indicesDataOverall
strainIndices
y
infectionHistories
strains
strainIndices
sampleTImes
sampleTimes
indicesData
indicesDataOverall
indicesSamples
virusIndices
strains
strainIndices
sampleTimes
indicesData
indicesDataOverall
indicesSamples
virusIndices
names(pars) <- mynamessimualte
simulate_data
indicesData
nrow(data)
data
data
quit()
n
y
indicesSamples
indicesData
 data
y
y
data
y
indicesData
indicesData
indicesDataOverall
length(titres)
sampleTimes
strainIndices
virusIndices
length(virusIndices0
length(virusIndices)
head(data)
length(antigenicMapLong)
length(antigenicMapShort)
length(antigenicMapShort)/48
strains[4]
strains[5]
strains[3]
antigenicMapLong[3]
head(fit_dat)
head(antigenicMap)]
head(antigenicMap)
virusIndices
indicesDataOverall
titres[1:84]
data[1:84,]
data[1:83,]
indicesDataOverall
data[1:82,]
data[1:83,]
nrow(infectionHistories)
ncol(infectionHistories)
indicesSamples
indicesData
indicesDataOverall
strains
strainIndices
indicesData
samplingTimes
sampleTimes
n <- 2
n_strain <- ncol(infectionTimes)
n_strain <- ncol(infectionHistories)
 startIndexSamples <- indicesSamples[1]
indicesSamples
 startIndexSamples <- indicesSamples[1] + 1
endIndexSamples <- indicesSamples[2]
endIndexSamples
startIndexData <- indicesDataOverall[1]
endIndexData <- indicesDataOverall[2]-1
endIndexData
endIndexData <- indicesDataOverall[2]
titre_data_individual(pars, infectionHistories[1,], circulationTimes,circulationMapIndices, samplingTimes[startIndexSamples:endIndexSample], indicesData[startIndexSamples:endIndexSamples], measuredMapIndices[startIndexData:endIndexData], antigenicMapLong,antigenicMapShort,n_strains)
circulationTimes
circulationTimes <- strains
circulationMapIndices <- strainIndices
titre_data_individual(pars, infectionHistories[1,], circulationTimes,circulationMapIndices, samplingTimes[startIndexSamples:endIndexSample], indicesData[startIndexSamples:endIndexSamples], measuredMapIndices[startIndexData:endIndexData], antigenicMapLong,antigenicMapShort,n_strains)
titre_data_individual(pars, infectionHistories[1,], circulationTimes,circulationMapIndices, samplingTimes[startIndexSamples:endIndexSamples], indicesData[startIndexSamples:endIndexSamples], measuredMapIndices[startIndexData:endIndexData], antigenicMapLong,antigenicMapShort,n_strains)
measuredMapIndices <- virusIndices
titre_data_individual(pars, infectionHistories[1,], circulationTimes,circulationMapIndices, samplingTimes[startIndexSamples:endIndexSamples], indicesData[startIndexSamples:endIndexSamples], measuredMapIndices[startIndexData:endIndexData], antigenicMapLong,antigenicMapShort,n_strains)
n_strains <- ncol(infectionHistories)
titre_data_individual(pars, infectionHistories[1,], circulationTimes,circulationMapIndices, samplingTimes[startIndexSamples:endIndexSamples], indicesData[startIndexSamples:endIndexSamples], measuredMapIndices[startIndexData:endIndexData], antigenicMapLong,antigenicMapShort,n_strains)
plot(titre_data_individual(pars, infectionHistories[1,], circulationTimes,circulationMapIndices, samplingTimes[startIndexSamples:endIndexSamples], indicesData[startIndexSamples:endIndexSamples], measuredMapIndices[startIndexData:endIndexData], antigenicMapLong,antigenicMapShort,n_strains))
y <- (titre_data_individual(pars, infectionHistories[1,], circulationTimes,circulationMapIndices, samplingTimes[startIndexSamples:endIndexSamples], indicesData[startIndexSamples:endIndexSamples], measuredMapIndices[startIndexData:endIndexData], antigenicMapLong,antigenicMapShort,n_strains))
plot(y~measuredMapIndices[startIndexData:endIndexData]
)
plot(data[data$individual ==1,])
plot(titre_data_individual(pars, infectionHistories[1,], circulationTimes,circulationMapIndices, samplingTimes[startIndexSamples:endIndexSamples], indicesData[startIndexSamples:endIndexSamples], measuredMapIndices[startIndexData:endIndexData], antigenicMapLong,antigenicMapShort,n_strains))
plot(titre_data_individual(pars, infectionHistories[1,], circulationTimes,circulationMapIndices, samplingTimes[startIndexSamples:endIndexSamples], indicesData[startIndexSamples:endIndexSamples], measuredMapIndices[startIndexData:endIndexData], antigenicMapLong,antigenicMapShort,n_strains))
plot(data[data$individual ==1,"titre"])
plot(titre_data_individual(pars, infectionHistories[1,], circulationTimes,circulationMapIndices, samplingTimes[startIndexSamples:endIndexSamples], indicesData[startIndexSamples:endIndexSamples], measuredMapIndices[startIndexData:endIndexData], antigenicMapLong,antigenicMapShort,n_strains))  C-c C-c
lines(y)
devtools::load_all()Loading serosolver
quit()
n
c
n
n
